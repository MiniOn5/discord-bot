require('dotenv').config();
const { Client, GatewayIntentBits, ActionRowBuilder, ButtonBuilder, ButtonStyle, Events, AttachmentBuilder, EmbedBuilder, PermissionsBitField } = require('discord.js');
const fs = require('fs');

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.DirectMessages
    ]
});

const token = process.env.DISCORD_TOKEN;
const NOTIFICATION_CHANNEL_ID = "1431415872395677706";
const MEDIA_CHANNEL_ID = "1431415482204033094";
const NOTIFICATION_ROLE_ID = "1431416078310834206";

let subscriptions = {};
const subsFile = './subs.json';

if (fs.existsSync(subsFile)) {
    subscriptions = JSON.parse(fs.readFileSync(subsFile));
}

function saveSubs() {
    fs.writeFileSync(subsFile, JSON.stringify(subscriptions, null, 2));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è embed —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
function createNotificationEmbed() {
    const embed = new EmbedBuilder()
        .setColor(0x0099FF)
        .setTitle('üîî –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Freak Mods')
        .setDescription('**–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –≤–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ —Å–æ–±—ã—Ç–∏—è!**\n\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä—è–º–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.')
        .addFields(
            { name: 'üì¨ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:', value: '‚Ä¢ –í–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è\n‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞\n‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è\n‚Ä¢ –°—Ä–æ—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' },
            { name: '‚ö° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:', value: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π' }
        )
        .setImage('attachment://freak_mods.png')
        .setFooter({ text: 'Freak Mods ‚Ä¢ –í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –∫–æ–º–ø–∞–Ω—å–æ–Ω', iconURL: 'https://i.imgur.com/xV6e6aM.png' })
        .setTimestamp();

    return embed;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è embed –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–∞
function createMediaEmbed() {
    const embed = new EmbedBuilder()
        .setColor(0xFF6B35)
        .setTitle('üì¢ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–æ–π')
        .setDescription('**–û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞—Å—Å–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º**\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –ø–∞–Ω–µ–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.')
        .addFields(
            { name: 'üì§ –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:', value: '1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"\n2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª\n3. –ë–æ—Ç –ø–µ—Ä–µ—à–ª–µ—Ç –µ–≥–æ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º' },
            { name: '‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:', value: '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞-–∫–æ–º–∞–Ω–¥–µ' }
        )
        .setFooter({ text: 'Freak Mods ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—Å—ã–ª–∫–∏', iconURL: 'https://i.imgur.com/xV6e6aM.png' })
        .setTimestamp();

    return embed;
}

client.once(Events.ClientReady, () => {
    console.log(`–ë–æ—Ç –æ–Ω–ª–∞–π–Ω: ${client.user.tag}`);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–∞—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    setTimeout(async () => {
        try {
            const notificationChannel = await client.channels.fetch(NOTIFICATION_CHANNEL_ID);
            const mediaChannel = await client.channels.fetch(MEDIA_CHANNEL_ID);
            
            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —ç—Ç–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö
            const messages = await notificationChannel.messages.fetch({ limit: 10 });
            const botMessages = messages.filter(msg => msg.author.id === client.user.id);
            await notificationChannel.bulkDelete(botMessages);
            
            const mediaMessages = await mediaChannel.messages.fetch({ limit: 10 });
            const botMediaMessages = mediaMessages.filter(msg => msg.author.id === client.user.id);
            await mediaChannel.bulkDelete(botMediaMessages);
            
            // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
            const notificationRow = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('subscribe')
                        .setLabel('‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')
                        .setStyle(ButtonStyle.Success),
                    new ButtonBuilder()
                        .setCustomId('unsubscribe')
                        .setLabel('‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è')
                        .setStyle(ButtonStyle.Danger)
                );
            
            const image = new AttachmentBuilder('./freak_mods.png');
            await notificationChannel.send({
                embeds: [createNotificationEmbed()],
                files: [image],
                components: [notificationRow]
            });
            
            // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–µ
            const mediaRow = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('send_broadcast')
                        .setLabel('üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')
                        .setStyle(ButtonStyle.Danger)
                );
            
            await mediaChannel.send({
                embeds: [createMediaEmbed()],
                components: [mediaRow]
            });
            
            console.log('–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö!');
            
        } catch (error) {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
        }
    }, 5000);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏
client.on(Events.InteractionCreate, async interaction => {
    if (!interaction.isButton()) return;

    try {
        const userId = interaction.user.id;
        const member = interaction.member;
        const hasRole = member && member.roles.cache.has(NOTIFICATION_ROLE_ID);
        const isSubscribed = subscriptions[userId];

        if (interaction.customId === 'subscribe') {
            // –ü–æ–¥–ø–∏—Å–∫–∞
            if (hasRole || isSubscribed) {
                await interaction.reply({ 
                    content: '‚ùå –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!', 
                    ephemeral: true 
                });
            } else {
                // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è
                subscriptions[userId] = true;
                if (member && NOTIFICATION_ROLE_ID) {
                    try {
                        await member.roles.add(NOTIFICATION_ROLE_ID);
                    } catch (error) {
                        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏:', error);
                    }
                }
                saveSubs();
                
                await interaction.reply({ 
                    content: '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è! –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –õ–°.', 
                    ephemeral: true 
                });
            }
        }
        
        if (interaction.customId === 'unsubscribe') {
            // –û—Ç–ø–∏—Å–∫–∞
            if (!hasRole && !isSubscribed) {
                await interaction.reply({ 
                    content: '‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!', 
                    ephemeral: true 
                });
            } else {
                // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è
                delete subscriptions[userId];
                if (member && NOTIFICATION_ROLE_ID) {
                    try {
                        await member.roles.remove(NOTIFICATION_ROLE_ID);
                    } catch (error) {
                        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏:', error);
                    }
                }
                saveSubs();
                
                await interaction.reply({ 
                    content: '‚úÖ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.', 
                    ephemeral: true 
                });
            }
        }
        
        if (interaction.customId === 'send_broadcast') {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
                return await interaction.reply({ 
                    content: '‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–µ–¥–∏–∞-–∫–æ–º–∞–Ω–¥—ã!', 
                    ephemeral: true 
                });
            }
            
            await interaction.reply({ 
                content: 'üìù –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª (—Ç–µ–∫—Å—Ç –∏–ª–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º), –∏ –æ–Ω–æ –±—É–¥–µ—Ç —Ä–∞–∑–æ—Å–ª–∞–Ω–æ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.', 
                ephemeral: true 
            });
        }
    } catch (error) {
        // –ò–ì–ù–û–†–ò–†–£–ï–ú –æ—à–∏–±–∫—É "Unknown interaction" - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ö
        if (error.code === 10062) {
            console.log('–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–µ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ');
            return;
        }
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:', error);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–µ–¥–∏–∞-–∫–∞–Ω–∞–ª–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
client.on(Events.MessageCreate, async message => {
    // –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
    if (message.channel.id === MEDIA_CHANNEL_ID && !message.author.bot) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
            return; // –ù–µ –∞–¥–º–∏–Ω - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π
        const messages = await message.channel.messages.fetch({ limit: 5 });
        const botMessage = messages.find(msg => 
            msg.author.id === client.user.id && 
            msg.components.length > 0
        );
        
        if (botMessage && message.createdTimestamp > botMessage.createdTimestamp) {
            // –≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å —Ä–∞—Å—Å—ã–ª–∫–∏
            
            // –ù–ê–ô–î–ò –í–°–ï–• –£–ß–ê–°–¢–ù–ò–ö–û–í –° –†–û–õ–¨–Æ
            const guild = message.guild;
            let membersWithRole = [];
            
            try {
                // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                membersWithRole = await guild.members.fetch();
                membersWithRole = membersWithRole.filter(member => 
                    member.roles.cache.has(NOTIFICATION_ROLE_ID)
                );
                console.log(`–ù–∞–π–¥–µ–Ω–æ ${membersWithRole.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', error);
                return;
            }
            
            let successCount = 0;
            let failCount = 0;
            
            // –°–æ–∑–¥–∞–µ–º embed –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
            const broadcastEmbed = new EmbedBuilder()
                .setColor(0x0099FF)
                .setTitle('üì¢ –í–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç Freak Mods')
                .setDescription(message.content || '')
                .setFooter({ text: 'Freak Mods ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', iconURL: 'https://i.imgur.com/xV6e6aM.png' })
                .setTimestamp();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
            if (message.attachments.size > 0) {
                broadcastEmbed.setImage(message.attachments.first().url);
            }
            
            // –†–∞—Å—Å—ã–ª–∞–µ–º –í–°–ï–ú —Å —Ä–æ–ª—å—é
            for (const member of membersWithRole.values()) {
                try {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ–±—ã –Ω–µ —Å–ª–∞—Ç—å –±–æ—Ç—É
                    if (member.user.bot) continue;
                    
                    const user = await client.users.fetch(member.id);
                    await user.send({ embeds: [broadcastEmbed] });
                    successCount++;
                    console.log(`–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${member.user.tag}`);
                } catch (err) {
                    console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${member.user.tag}: ${err}`);
                    failCount++;
                }
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ —Ä–∞—Å—Å—ã–ª–∫–µ
            const reportEmbed = new EmbedBuilder()
                .setColor(successCount > 0 ? 0x00FF00 : 0xFF0000)
                .setTitle('üìä –û—Ç—á–µ—Ç –æ —Ä–∞—Å—Å—ã–ª–∫–µ')
                .setDescription(`–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`)
                .addFields(
                    { name: '‚úÖ –£—Å–ø–µ—à–Ω–æ:', value: `${successCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`, inline: true },
                    { name: '‚ùå –û—à–∏–±–∫–∏:', value: `${failCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`, inline: true },
                    { name: 'üë• –í—Å–µ–≥–æ —Å —Ä–æ–ª—å—é:', value: `${membersWithRole.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`, inline: true }
                )
                .setTimestamp();
            
            await message.reply({ embeds: [reportEmbed] });
            console.log(`–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${successCount}/${membersWithRole.size} —É—Å–ø–µ—à–Ω–æ`);
        }
    }
});

client.login(token);